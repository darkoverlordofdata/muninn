#+--------------------------------------------------------------------+
#| SocketIO.coffee
#+--------------------------------------------------------------------+
#| Copyright DarkOverlordOfData (c) 2014
#+--------------------------------------------------------------------+
#|
#| This file is a part of Muninn
#|
#| Muninn is free software; you can copy, modify, and distribute
#| it under the terms of the MIT License
#|
#+--------------------------------------------------------------------+
#
# Socket.IO wrapper
#
muninn = require('../muninn')

module.exports = class muninn.core.SocketIO

  constructor: (server) ->

    muninn.logMessage 'debug', "SocketIO Class Initialized"

    io = require('socket.io').listen(server.http)
    io.configure ->
      io.enable 'browser client minification'   # send minified client
      io.enable 'browser client etag'           # apply etag caching logic based on version number
      io.enable 'browser client gzip'           # gzip the file
      io.set 'log level', 1                     # reduce logging
      io.set 'authorization', ($authorization, $next) ->
        if ($authorization.xdomain)
          $next 'Cross-domain connections are not allowed'
        else
          $next null, true

    io.sockets.on 'connection', ($socket) ->

      $socket.on 'message', ($message) ->
        $ip = $socket.handshake.address.address
        $url = $message
        io.sockets.emit 'pageview',
          'connections': Object.keys(io.connected).length
          'ip': '***.***.***.' + $ip.substring($ip.lastIndexOf('.') + 1)
          'url': $url
          'xdomain': $socket.handshake.xdomain
          'timestamp': new Date()

      $socket.on 'disconnect',  ->
        io.sockets.emit 'pageview',
          'connections': Object.keys(io.connected).length

