#+--------------------------------------------------------------------+
#| Server.coffee
#+--------------------------------------------------------------------+
#| Copyright DarkOverlordOfData (c) 2014
#+--------------------------------------------------------------------+
#|
#| This file is a part of Muninn
#|
#| Muninn is free software; you can copy, modify, and distribute
#| it under the terms of the MIT License
#|
#+--------------------------------------------------------------------+
#
# http server
#

fs        = require('fs')
path      = require('path')
http      = require('http')
express   = require('express')
dispatch  = require('dispatch')
muninn    = require('../muninn')

class muninn.core.Server
  
  app: null
  http: null

  constructor: () ->

    muninn.logMessage 'debug', "Server Class Initialized"

    $config = muninn.config.config

    # Init Express
    @app = express()
    @app.set 'port', $config.http_port
    @app.set 'ip', $config.http_ip
    @app.use express.logger($config.logger)

    # Locate Assets
    @app.use express.static(muninn.DOCPATH)
    @app.use express.favicon(path.join(muninn.DOCPATH, $config.favicon))

    # Request
    @http = http.createServer(@app)
    @app.use express.query()
    @app.use express.bodyParser()
    @app.use express.methodOverride()

    # Load libraries
#    for name in $config.autoload.libraries
#      Library = muninn.loadClass(name, 'lib')
#      new Library(@)

    SocketIO = muninn.loadClass('SocketIO', 'core')
    new SocketIO(@)

    # Load routes and controllers
    for name in $config.autoload.controllers
      Controller = muninn.loadClass(name, 'controllers')
      muninn.setRoutes (new Controller(@)).routes()

    # Set the routes
    @app.use dispatch(muninn.routes)

    # Exception handler
    @app.use ($err, $req, $res, $next) ->
      console.log $err.stack
      $res.send 500, $err.stack

    # Page Not found
    @app.use ($req, $res, $next) ->
      $res.sendfile path.join(muninn.DOCPATH, "/404.html")

  start: ->
    @http.listen @app.get('port'), @app.get('ip'), =>
      muninn.logMessage 'info', "listening on port http://localhost:%d", @app.get('port')


